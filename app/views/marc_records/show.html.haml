/ Copyright 2014 Rico Simke, Leipzig University Library
/ http://www.ub.uni-leipzig.de

/ This code is the result of the project "Die Bibliothek der Milliarden WÃ¶rter".
/ This project is funded by the European Social Fund. "Die Bibliothek der
/ Milliarden WÃ¶rter" is a cooperation project between the Leipzig University
/ Library, the Natural Language Processing Group at the Institute of Computer
/ Science at Leipzig University, and the Image and Signal Processing Group
/ at the Institute of Computer Science at Leipzig University.
/
/ Licensed under the Apache License, Version 2.0 (the "License");
/ you may not use this file except in compliance with the License.
/ You may obtain a copy of the License at
/
/     http://www.apache.org/licenses/LICENSE-2.0
/
/ Unless required by applicable law or agreed to in writing, software
/ distributed under the License is distributed on an "AS IS" BASIS,
/ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
/ See the License for the specific language governing permissions and
/ limitations under the License.

- model_class = MarcRecord
.page-header
  %h1=t '.title', :default => model_class.model_name.human.titleize

%p
  %h2
    = model_class.human_attribute_name(:id) + ':'
    = @marc_record.id

%p
  %strong XML
  - if @marc_record.isValidMarcXml
    .label.label-success= "valid"
  - else
    .label.label-warning= "not valid"
  = link_to "Download MARC XML", marc_record_path(:download => "marcxml"), :class => "btn btn-mini"
  = link_to "Download as MODS", marc_record_path(:download => "mods"), :class => "btn btn-mini"
%p
  != CodeRay.scan(@marc_record.marc, :xml).div()
- if @marc_record.isValidMarcXml
  %p
    %strong List
    %ul.list-group
      - for hash in @marc_record.getMarcArray
        - for key in hash.keys
          - if hash[key].is_a?(Hash)
            %li.list-group-item
              %span.badge= key
              - for element in hash[key]["subfields"]
                - subkey = element.keys[0]
                %span.badge= subkey
                = element[subkey]
          - else
            %li.list-group-item
              %span.badge= key
              = hash[key]
- else
  %p
    .alert
      %strong= "Syntax errors found:"
      %ul
        - @marc_record.validateMarcXml.each do |error|
          %li= error

.form-actions
  = link_to t('.back', :default => t("helpers.links.back")), marc_records_path, :class => 'btn'
  = link_to t('.edit', :default => t("helpers.links.edit")), edit_marc_record_path(@marc_record), :class => 'btn'
  = link_to t('.destroy', :default => t("helpers.links.destroy")), marc_record_path(@marc_record), :method => "delete", :data => { :confirm => t('.confirm', :default => t("helpers.links.confirm", :default => 'Are you sure?')) }, :class => 'btn btn-danger'
